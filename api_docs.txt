User Apis::

User model -
username, password, type (normal/critic), reviews, ratings

-----------------
login - post /users/login

signup - post /users/signup

get - get /users (get all users)

get - get /users/:userId (find one user)

update - put /users/:userId - pass new user json through body, it will overwrite/replace the existing user object in mongo for the userId passed as param.

delete - delete /users/:userId

logout - post /users/logout

profile - get /users/profile - retrieves the current logged in user.

------------------
If user with username already exists -
/signup
returns
{
    "message": "User validation failed: username: is already taken."
}
-------------

Review Model -
title, body, movieId, reviewId

Review APIs -

post - /reviews - to create new review. Send in req.body

get - /reviews - sample query - localhost:3000/reviews?movieId=123456&reviewId=5caa2f6e34a4e7189ef199b8 - fetches all reviews for specified reviewId and movieId

put - /reviews/:reviewId  - update review, send update object in req.body

delete - /reviews/:reviewId - delete review for specified reviewId
